ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	Output,2,2
  20              		.comm	ContinuouslySendData,1,1
  21              		.comm	SendSingleByte,1,1
  22              		.comm	SendEmulatedData,1,1
  23              		.comm	TransmitBuffer,16,4
  24              		.comm	EmulatedData,1,1
  25              		.section	.rodata
  26              		.align	2
  27              	.LC0:
  28 0000 25580D0A 		.ascii	"%X\015\012\000"
  28      00
  29 0005 000000   		.align	2
  30              	.LC1:
  31 0008 25780D0A 		.ascii	"%x\015\012\000"
  31      00
  32              		.section	.text.Transmit,"ax",%progbits
  33              		.align	2
  34              		.global	Transmit
  35              		.thumb
  36              		.thumb_func
  37              		.type	Transmit, %function
  38              	Transmit:
  39              	.LFB64:
  40              		.file 1 "main.c"
   1:main.c        **** /******************************************************************************
   2:main.c        **** * Project Name		: CE95277 ADC and UART
   3:main.c        **** * File Name			: main.c
   4:main.c        **** * Version 			: **
   5:main.c        **** * Device Used		: CY8C5888LTI-LP097
   6:main.c        **** * Software Used		: PSoC Creator 3.1 SP2
   7:main.c        **** * Compiler    		: ARM GCC 4.8.4, ARM RVDS Generic, ARM MDK Generic
   8:main.c        **** * Related Hardware	: CY8CKIT059 PSoC 5 LP Prototyping Kit 
   9:main.c        **** * Owner				: KLMZ
  10:main.c        **** *
  11:main.c        **** ********************************************************************************
  12:main.c        **** * Copyright (2015), Cypress Semiconductor Corporation. All Rights Reserved.
  13:main.c        **** ********************************************************************************
  14:main.c        **** * This software is owned by Cypress Semiconductor Corporation (Cypress)
  15:main.c        **** * and is protected by and subject to worldwide patent protection (United
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 2


  16:main.c        **** * States and foreign), United States copyright laws and international treaty
  17:main.c        **** * provisions. Cypress hereby grants to licensee a personal, non-exclusive,
  18:main.c        **** * non-transferable license to copy, use, modify, create derivative works of,
  19:main.c        **** * and compile the Cypress Source Code and derivative works for the sole
  20:main.c        **** * purpose of creating custom software in support of licensee product to be
  21:main.c        **** * used only in conjunction with a Cypress integrated circuit as specified in
  22:main.c        **** * the applicable agreement. Any reproduction, modification, translation,
  23:main.c        **** * compilation, or representation of this software except as specified above 
  24:main.c        **** * is prohibited without the express written permission of Cypress.
  25:main.c        **** *
  26:main.c        **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH 
  27:main.c        **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
  28:main.c        **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:main.c        **** * Cypress reserves the right to make changes without further notice to the 
  30:main.c        **** * materials described herein. Cypress does not assume any liability arising out 
  31:main.c        **** * of the application or use of any product or circuit described herein. Cypress 
  32:main.c        **** * does not authorize its products for use as critical components in life-support 
  33:main.c        **** * systems where a malfunction or failure may reasonably be expected to result in 
  34:main.c        **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:main.c        **** * support systems application implies that the manufacturer assumes all risk of 
  36:main.c        **** * such use and in doing so indemnifies Cypress against all charges. 
  37:main.c        **** *
  38:main.c        **** * Use of this Software may be limited by and subject to the applicable Cypress
  39:main.c        **** * software license agreement. 
  40:main.c        **** *******************************************************************************/
  41:main.c        **** 
  42:main.c        **** #include <device.h>
  43:main.c        **** #include "stdio.h"
  44:main.c        **** 
  45:main.c        **** /* Project Defines */
  46:main.c        **** #define FALSE  0
  47:main.c        **** #define TRUE   1
  48:main.c        **** #define TRANSMIT_BUFFER_SIZE  16
  49:main.c        **** 
  50:main.c        ****     /* Variable to store ADC result */
  51:main.c        ****     uint16 Output;
  52:main.c        ****     /* Flags used to store transmit data commands */
  53:main.c        ****     uint8 ContinuouslySendData;
  54:main.c        ****     uint8 SendSingleByte;
  55:main.c        ****     uint8 SendEmulatedData;
  56:main.c        ****     /* Transmit Buffer */
  57:main.c        ****     char TransmitBuffer[TRANSMIT_BUFFER_SIZE];
  58:main.c        ****     /* Variable used to send emulated data */
  59:main.c        ****     uint8 EmulatedData;
  60:main.c        **** 
  61:main.c        **** 
  62:main.c        **** CY_ISR_PROTO(Transmit);
  63:main.c        **** 
  64:main.c        **** CY_ISR(Transmit)
  65:main.c        **** {
  41              		.loc 1 65 0
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 0
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 7, -8
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 3


  48              		.cfi_offset 14, -4
  49 0002 00AF     		add	r7, sp, #0
  50              		.cfi_def_cfa_register 7
  66:main.c        ****         /* Check to see if an ADC conversion has completed */
  67:main.c        ****         if(ADC_DelSig_1_IsEndConversion(ADC_DelSig_1_RETURN_STATUS))
  51              		.loc 1 67 0
  52 0004 0120     		movs	r0, #1
  53 0006 FFF7FEFF 		bl	ADC_DelSig_1_IsEndConversion
  54 000a 0346     		mov	r3, r0
  55 000c 002B     		cmp	r3, #0
  56 000e 32D0     		beq	.L5
  68:main.c        ****         {
  69:main.c        ****             /* Use the GetResult16 API to get an 8 bit unsigned result in
  70:main.c        ****              * single ended mode.  The API CountsTo_mVolts is then used
  71:main.c        ****              * to convert the ADC counts into mV before transmitting via
  72:main.c        ****              * the UART.  See the datasheet API description for more
  73:main.c        ****              * details */
  74:main.c        ****             //Output = ADC_DelSig_1_CountsTo_mVolts(ADC_DelSig_1_GetResult16());
  75:main.c        ****             Output = ADC_DelSig_1_GetResult16();
  57              		.loc 1 75 0
  58 0010 FFF7FEFF 		bl	ADC_DelSig_1_GetResult16
  59 0014 0346     		mov	r3, r0
  60 0016 9AB2     		uxth	r2, r3
  61 0018 184B     		ldr	r3, .L6
  62 001a 1A80     		strh	r2, [r3]	@ movhi
  76:main.c        ****             
  77:main.c        ****             /* Send data based on last UART command */
  78:main.c        ****             if(SendSingleByte || ContinuouslySendData)
  63              		.loc 1 78 0
  64 001c 184B     		ldr	r3, .L6+4
  65 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  66 0020 002B     		cmp	r3, #0
  67 0022 03D1     		bne	.L3
  68              		.loc 1 78 0 is_stmt 0 discriminator 1
  69 0024 174B     		ldr	r3, .L6+8
  70 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  71 0028 002B     		cmp	r3, #0
  72 002a 0DD0     		beq	.L4
  73              	.L3:
  79:main.c        ****             {
  80:main.c        ****                 /* Format ADC result for transmition */
  81:main.c        ****                 //sprintf(TransmitBuffer, "Sample: %d mV\r\n", Output);
  82:main.c        ****                 sprintf(TransmitBuffer, "%X\r\n", Output);
  74              		.loc 1 82 0 is_stmt 1
  75 002c 134B     		ldr	r3, .L6
  76 002e 1B88     		ldrh	r3, [r3]
  77 0030 1A46     		mov	r2, r3
  78 0032 1549     		ldr	r1, .L6+12
  79 0034 1548     		ldr	r0, .L6+16
  80 0036 FFF7FEFF 		bl	sprintf
  83:main.c        ****                 /* Send out the data */
  84:main.c        ****                 UART_1_PutString(TransmitBuffer);
  81              		.loc 1 84 0
  82 003a 1448     		ldr	r0, .L6+16
  83 003c FFF7FEFF 		bl	UART_1_PutString
  85:main.c        ****                 /* Reset the send once flag */
  86:main.c        ****                 SendSingleByte = FALSE;
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 4


  84              		.loc 1 86 0
  85 0040 0F4B     		ldr	r3, .L6+4
  86 0042 0022     		movs	r2, #0
  87 0044 1A70     		strb	r2, [r3]
  87:main.c        ****             }
  88:main.c        ****             else if(SendEmulatedData)
  89:main.c        ****             {
  90:main.c        ****                 /* Format ADC result for transmition */
  91:main.c        ****                 sprintf(TransmitBuffer, "%x\r\n", EmulatedData);
  92:main.c        ****                 /* Send out the data */
  93:main.c        ****                 UART_1_PutString(TransmitBuffer);
  94:main.c        ****                 EmulatedData++;
  95:main.c        ****                 /* Reset the send once flag */
  96:main.c        ****                 SendEmulatedData = FALSE;   
  97:main.c        ****             }
  98:main.c        ****         }    
  99:main.c        ****     
 100:main.c        **** }
  88              		.loc 1 100 0
  89 0046 16E0     		b	.L5
  90              	.L4:
  88:main.c        ****             {
  91              		.loc 1 88 0
  92 0048 114B     		ldr	r3, .L6+20
  93 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  94 004c 002B     		cmp	r3, #0
  95 004e 12D0     		beq	.L5
  91:main.c        ****                 /* Send out the data */
  96              		.loc 1 91 0
  97 0050 104B     		ldr	r3, .L6+24
  98 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  99 0054 1A46     		mov	r2, r3
 100 0056 1049     		ldr	r1, .L6+28
 101 0058 0C48     		ldr	r0, .L6+16
 102 005a FFF7FEFF 		bl	sprintf
  93:main.c        ****                 EmulatedData++;
 103              		.loc 1 93 0
 104 005e 0B48     		ldr	r0, .L6+16
 105 0060 FFF7FEFF 		bl	UART_1_PutString
  94:main.c        ****                 /* Reset the send once flag */
 106              		.loc 1 94 0
 107 0064 0B4B     		ldr	r3, .L6+24
 108 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 109 0068 0133     		adds	r3, r3, #1
 110 006a DAB2     		uxtb	r2, r3
 111 006c 094B     		ldr	r3, .L6+24
 112 006e 1A70     		strb	r2, [r3]
  96:main.c        ****             }
 113              		.loc 1 96 0
 114 0070 074B     		ldr	r3, .L6+20
 115 0072 0022     		movs	r2, #0
 116 0074 1A70     		strb	r2, [r3]
 117              	.L5:
 118              		.loc 1 100 0
 119 0076 00BF     		nop
 120 0078 80BD     		pop	{r7, pc}
 121              	.L7:
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 5


 122 007a 00BF     		.align	2
 123              	.L6:
 124 007c 00000000 		.word	Output
 125 0080 00000000 		.word	SendSingleByte
 126 0084 00000000 		.word	ContinuouslySendData
 127 0088 00000000 		.word	.LC0
 128 008c 00000000 		.word	TransmitBuffer
 129 0090 00000000 		.word	SendEmulatedData
 130 0094 00000000 		.word	EmulatedData
 131 0098 08000000 		.word	.LC1
 132              		.cfi_endproc
 133              	.LFE64:
 134              		.size	Transmit, .-Transmit
 135              		.section	.rodata
 136 000d 000000   		.align	2
 137              	.LC2:
 138 0010 434F4D20 		.ascii	"COM Port Open\000"
 138      506F7274 
 138      204F7065 
 138      6E00
 139              		.section	.text.main,"ax",%progbits
 140              		.align	2
 141              		.global	main
 142              		.thumb
 143              		.thumb_func
 144              		.type	main, %function
 145              	main:
 146              	.LFB65:
 101:main.c        **** 
 102:main.c        **** /*******************************************************************************
 103:main.c        **** * Function Name: main
 104:main.c        **** ********************************************************************************
 105:main.c        **** *
 106:main.c        **** * Summary:
 107:main.c        **** *  main() performs following functions:
 108:main.c        **** *  1: Starts the ADC and UART components.
 109:main.c        **** *  2: Checks for ADC end of conversion.  Stores latest result in output
 110:main.c        **** *     if conversion complete.
 111:main.c        **** *  3: Checks for UART input.
 112:main.c        **** *     On 'C' or 'c' received: transmits the last sample via the UART.
 113:main.c        **** *     On 'S' or 's' received: continuously transmits samples as they are completed.
 114:main.c        **** *     On 'X' or 'x' received: stops continuously transmitting samples.
 115:main.c        **** *     On 'E' or 'e' received: transmits a dummy byte of data.
 116:main.c        **** *
 117:main.c        **** * Parameters:
 118:main.c        **** *  None.
 119:main.c        **** *
 120:main.c        **** * Return:
 121:main.c        **** *  None.
 122:main.c        **** *
 123:main.c        **** *******************************************************************************/
 124:main.c        **** int main()
 125:main.c        **** {
 147              		.loc 1 125 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 8
 150              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 6


 151 0000 80B5     		push	{r7, lr}
 152              		.cfi_def_cfa_offset 8
 153              		.cfi_offset 7, -8
 154              		.cfi_offset 14, -4
 155 0002 82B0     		sub	sp, sp, #8
 156              		.cfi_def_cfa_offset 16
 157 0004 00AF     		add	r7, sp, #0
 158              		.cfi_def_cfa_register 7
 126:main.c        ****     /* Variable to store UART received character */
 127:main.c        ****     uint8 Ch;
 128:main.c        ****     
 129:main.c        ****     /* Start the components */
 130:main.c        ****     ADC_DelSig_1_Start();
 159              		.loc 1 130 0
 160 0006 FFF7FEFF 		bl	ADC_DelSig_1_Start
 131:main.c        ****     UART_1_Start();
 161              		.loc 1 131 0
 162 000a FFF7FEFF 		bl	UART_1_Start
 132:main.c        ****     WaveDAC8_Start();
 163              		.loc 1 132 0
 164 000e FFF7FEFF 		bl	WaveDAC8_Start
 133:main.c        ****     
 134:main.c        ****     /* Initialize Variables */
 135:main.c        ****     ContinuouslySendData = FALSE;
 165              		.loc 1 135 0
 166 0012 254B     		ldr	r3, .L21
 167 0014 0022     		movs	r2, #0
 168 0016 1A70     		strb	r2, [r3]
 136:main.c        ****     SendSingleByte = FALSE;
 169              		.loc 1 136 0
 170 0018 244B     		ldr	r3, .L21+4
 171 001a 0022     		movs	r2, #0
 172 001c 1A70     		strb	r2, [r3]
 137:main.c        ****     SendEmulatedData = FALSE;
 173              		.loc 1 137 0
 174 001e 244B     		ldr	r3, .L21+8
 175 0020 0022     		movs	r2, #0
 176 0022 1A70     		strb	r2, [r3]
 138:main.c        ****     EmulatedData = 0;
 177              		.loc 1 138 0
 178 0024 234B     		ldr	r3, .L21+12
 179 0026 0022     		movs	r2, #0
 180 0028 1A70     		strb	r2, [r3]
 139:main.c        ****     
 140:main.c        ****     /* Start the ADC conversion */
 141:main.c        ****     ADC_DelSig_1_StartConvert();
 181              		.loc 1 141 0
 182 002a FFF7FEFF 		bl	ADC_DelSig_1_StartConvert
 142:main.c        ****     
 143:main.c        ****     /* Send message to verify COM port is connected properly */
 144:main.c        ****     UART_1_PutString("COM Port Open");
 183              		.loc 1 144 0
 184 002e 2248     		ldr	r0, .L21+16
 185 0030 FFF7FEFF 		bl	UART_1_PutString
 145:main.c        ****     
 146:main.c        ****     Timer_Start();
 186              		.loc 1 146 0
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 7


 187 0034 FFF7FEFF 		bl	Timer_Start
 147:main.c        ****     isr_StartEx(Transmit);
 188              		.loc 1 147 0
 189 0038 2048     		ldr	r0, .L21+20
 190 003a FFF7FEFF 		bl	isr_StartEx
 148:main.c        ****     CyGlobalIntEnable;
 191              		.loc 1 148 0
 192              		.syntax unified
 193              	@ 148 "main.c" 1
 194 003e 62B6     		CPSIE   i
 195              	@ 0 "" 2
 196              		.thumb
 197              		.syntax unified
 198              	.L19:
 149:main.c        ****     
 150:main.c        ****     for(;;)
 151:main.c        ****     {        
 152:main.c        ****         /* Non-blocking call to get the latest data recieved  */
 153:main.c        ****         Ch = UART_1_GetChar();
 199              		.loc 1 153 0
 200 0040 FFF7FEFF 		bl	UART_1_GetChar
 201 0044 0346     		mov	r3, r0
 202 0046 FB71     		strb	r3, [r7, #7]
 154:main.c        ****         
 155:main.c        ****         /* Set flags based on UART command */
 156:main.c        ****         switch(Ch)
 203              		.loc 1 156 0
 204 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 205 004a 582B     		cmp	r3, #88
 206 004c 21D0     		beq	.L10
 207 004e 582B     		cmp	r3, #88
 208 0050 0BDC     		bgt	.L11
 209 0052 432B     		cmp	r3, #67
 210 0054 15D0     		beq	.L12
 211 0056 432B     		cmp	r3, #67
 212 0058 02DC     		bgt	.L13
 213 005a 002B     		cmp	r3, #0
 214 005c 21D0     		beq	.L20
 157:main.c        ****         {
 158:main.c        ****             case 0:
 159:main.c        ****                 /* No new data was recieved */
 160:main.c        ****                 break;
 161:main.c        ****             case 'C':
 162:main.c        ****             case 'c':
 163:main.c        ****                 SendSingleByte = TRUE;
 164:main.c        ****                 break;
 165:main.c        ****             case 'S':
 166:main.c        ****             case 's':
 167:main.c        ****                 ContinuouslySendData = TRUE;
 168:main.c        ****                 break;
 169:main.c        ****             case 'X':
 170:main.c        ****             case 'x':
 171:main.c        ****                 ContinuouslySendData = FALSE;
 172:main.c        ****                 break;
 173:main.c        ****             case 'E':
 174:main.c        ****             case 'e':
 175:main.c        ****                 SendEmulatedData = TRUE;
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 8


 176:main.c        ****                 break;
 177:main.c        ****             default:
 178:main.c        ****                 /* Place error handling code here */
 179:main.c        ****                 break;    
 215              		.loc 1 179 0
 216 005e 21E0     		b	.L18
 217              	.L13:
 156:main.c        ****         {
 218              		.loc 1 156 0
 219 0060 452B     		cmp	r3, #69
 220 0062 1AD0     		beq	.L15
 221 0064 532B     		cmp	r3, #83
 222 0066 10D0     		beq	.L16
 223              		.loc 1 179 0
 224 0068 1CE0     		b	.L18
 225              	.L11:
 156:main.c        ****         {
 226              		.loc 1 156 0
 227 006a 652B     		cmp	r3, #101
 228 006c 15D0     		beq	.L15
 229 006e 652B     		cmp	r3, #101
 230 0070 02DC     		bgt	.L17
 231 0072 632B     		cmp	r3, #99
 232 0074 05D0     		beq	.L12
 233              		.loc 1 179 0
 234 0076 15E0     		b	.L18
 235              	.L17:
 156:main.c        ****         {
 236              		.loc 1 156 0
 237 0078 732B     		cmp	r3, #115
 238 007a 06D0     		beq	.L16
 239 007c 782B     		cmp	r3, #120
 240 007e 08D0     		beq	.L10
 241              		.loc 1 179 0
 242 0080 10E0     		b	.L18
 243              	.L12:
 163:main.c        ****                 break;
 244              		.loc 1 163 0
 245 0082 0A4B     		ldr	r3, .L21+4
 246 0084 0122     		movs	r2, #1
 247 0086 1A70     		strb	r2, [r3]
 164:main.c        ****             case 'S':
 248              		.loc 1 164 0
 249 0088 0CE0     		b	.L18
 250              	.L16:
 167:main.c        ****                 break;
 251              		.loc 1 167 0
 252 008a 074B     		ldr	r3, .L21
 253 008c 0122     		movs	r2, #1
 254 008e 1A70     		strb	r2, [r3]
 168:main.c        ****             case 'X':
 255              		.loc 1 168 0
 256 0090 08E0     		b	.L18
 257              	.L10:
 171:main.c        ****                 break;
 258              		.loc 1 171 0
 259 0092 054B     		ldr	r3, .L21
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 9


 260 0094 0022     		movs	r2, #0
 261 0096 1A70     		strb	r2, [r3]
 172:main.c        ****             case 'E':
 262              		.loc 1 172 0
 263 0098 04E0     		b	.L18
 264              	.L15:
 175:main.c        ****                 break;
 265              		.loc 1 175 0
 266 009a 054B     		ldr	r3, .L21+8
 267 009c 0122     		movs	r2, #1
 268 009e 1A70     		strb	r2, [r3]
 176:main.c        ****             default:
 269              		.loc 1 176 0
 270 00a0 00E0     		b	.L18
 271              	.L20:
 160:main.c        ****             case 'C':
 272              		.loc 1 160 0
 273 00a2 00BF     		nop
 274              	.L18:
 180:main.c        ****         }
 181:main.c        ****         
 182:main.c        ****     }
 275              		.loc 1 182 0 discriminator 1
 276 00a4 CCE7     		b	.L19
 277              	.L22:
 278 00a6 00BF     		.align	2
 279              	.L21:
 280 00a8 00000000 		.word	ContinuouslySendData
 281 00ac 00000000 		.word	SendSingleByte
 282 00b0 00000000 		.word	SendEmulatedData
 283 00b4 00000000 		.word	EmulatedData
 284 00b8 10000000 		.word	.LC2
 285 00bc 00000000 		.word	Transmit
 286              		.cfi_endproc
 287              	.LFE65:
 288              		.size	main, .-main
 289              		.text
 290              	.Letext0:
 291              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 292              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 293              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 294              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 295              		.section	.debug_info,"",%progbits
 296              	.Ldebug_info0:
 297 0000 78010000 		.4byte	0x178
 298 0004 0400     		.2byte	0x4
 299 0006 00000000 		.4byte	.Ldebug_abbrev0
 300 000a 04       		.byte	0x4
 301 000b 01       		.uleb128 0x1
 302 000c 0D000000 		.4byte	.LASF25
 303 0010 0C       		.byte	0xc
 304 0011 77010000 		.4byte	.LASF26
 305 0015 9C010000 		.4byte	.LASF27
 306 0019 00000000 		.4byte	.Ldebug_ranges0+0
 307 001d 00000000 		.4byte	0
 308 0021 00000000 		.4byte	.Ldebug_line0
 309 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 10


 310 0026 01       		.byte	0x1
 311 0027 06       		.byte	0x6
 312 0028 2B020000 		.4byte	.LASF0
 313 002c 02       		.uleb128 0x2
 314 002d 01       		.byte	0x1
 315 002e 08       		.byte	0x8
 316 002f C7000000 		.4byte	.LASF1
 317 0033 02       		.uleb128 0x2
 318 0034 02       		.byte	0x2
 319 0035 05       		.byte	0x5
 320 0036 83010000 		.4byte	.LASF2
 321 003a 02       		.uleb128 0x2
 322 003b 02       		.byte	0x2
 323 003c 07       		.byte	0x7
 324 003d E7000000 		.4byte	.LASF3
 325 0041 03       		.uleb128 0x3
 326 0042 9B000000 		.4byte	.LASF9
 327 0046 02       		.byte	0x2
 328 0047 3F       		.byte	0x3f
 329 0048 4C000000 		.4byte	0x4c
 330 004c 02       		.uleb128 0x2
 331 004d 04       		.byte	0x4
 332 004e 05       		.byte	0x5
 333 004f 16020000 		.4byte	.LASF4
 334 0053 02       		.uleb128 0x2
 335 0054 04       		.byte	0x4
 336 0055 07       		.byte	0x7
 337 0056 D5000000 		.4byte	.LASF5
 338 005a 02       		.uleb128 0x2
 339 005b 08       		.byte	0x8
 340 005c 05       		.byte	0x5
 341 005d 69010000 		.4byte	.LASF6
 342 0061 02       		.uleb128 0x2
 343 0062 08       		.byte	0x8
 344 0063 07       		.byte	0x7
 345 0064 38010000 		.4byte	.LASF7
 346 0068 04       		.uleb128 0x4
 347 0069 04       		.byte	0x4
 348 006a 05       		.byte	0x5
 349 006b 696E7400 		.ascii	"int\000"
 350 006f 02       		.uleb128 0x2
 351 0070 04       		.byte	0x4
 352 0071 07       		.byte	0x7
 353 0072 2B010000 		.4byte	.LASF8
 354 0076 03       		.uleb128 0x3
 355 0077 4F010000 		.4byte	.LASF10
 356 007b 03       		.byte	0x3
 357 007c 2C       		.byte	0x2c
 358 007d 41000000 		.4byte	0x41
 359 0081 05       		.uleb128 0x5
 360 0082 10020000 		.4byte	.LASF11
 361 0086 04       		.byte	0x4
 362 0087 9201     		.2byte	0x192
 363 0089 2C000000 		.4byte	0x2c
 364 008d 05       		.uleb128 0x5
 365 008e 24010000 		.4byte	.LASF12
 366 0092 04       		.byte	0x4
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 11


 367 0093 9301     		.2byte	0x193
 368 0095 3A000000 		.4byte	0x3a
 369 0099 02       		.uleb128 0x2
 370 009a 04       		.byte	0x4
 371 009b 04       		.byte	0x4
 372 009c C1000000 		.4byte	.LASF13
 373 00a0 02       		.uleb128 0x2
 374 00a1 08       		.byte	0x8
 375 00a2 04       		.byte	0x4
 376 00a3 18010000 		.4byte	.LASF14
 377 00a7 02       		.uleb128 0x2
 378 00a8 01       		.byte	0x1
 379 00a9 08       		.byte	0x8
 380 00aa 7E010000 		.4byte	.LASF15
 381 00ae 02       		.uleb128 0x2
 382 00af 08       		.byte	0x8
 383 00b0 04       		.byte	0x4
 384 00b1 1F020000 		.4byte	.LASF16
 385 00b5 02       		.uleb128 0x2
 386 00b6 04       		.byte	0x4
 387 00b7 07       		.byte	0x7
 388 00b8 60010000 		.4byte	.LASF17
 389 00bc 06       		.uleb128 0x6
 390 00bd 57010000 		.4byte	.LASF28
 391 00c1 01       		.byte	0x1
 392 00c2 40       		.byte	0x40
 393 00c3 00000000 		.4byte	.LFB64
 394 00c7 9C000000 		.4byte	.LFE64-.LFB64
 395 00cb 01       		.uleb128 0x1
 396 00cc 9C       		.byte	0x9c
 397 00cd 07       		.uleb128 0x7
 398 00ce 1F010000 		.4byte	.LASF29
 399 00d2 01       		.byte	0x1
 400 00d3 7C       		.byte	0x7c
 401 00d4 68000000 		.4byte	0x68
 402 00d8 00000000 		.4byte	.LFB65
 403 00dc C0000000 		.4byte	.LFE65-.LFB65
 404 00e0 01       		.uleb128 0x1
 405 00e1 9C       		.byte	0x9c
 406 00e2 F4000000 		.4byte	0xf4
 407 00e6 08       		.uleb128 0x8
 408 00e7 436800   		.ascii	"Ch\000"
 409 00ea 01       		.byte	0x1
 410 00eb 7F       		.byte	0x7f
 411 00ec 81000000 		.4byte	0x81
 412 00f0 02       		.uleb128 0x2
 413 00f1 91       		.byte	0x91
 414 00f2 77       		.sleb128 -9
 415 00f3 00       		.byte	0
 416 00f4 09       		.uleb128 0x9
 417 00f5 FA000000 		.4byte	.LASF18
 418 00f9 05       		.byte	0x5
 419 00fa 1207     		.2byte	0x712
 420 00fc 00010000 		.4byte	0x100
 421 0100 0A       		.uleb128 0xa
 422 0101 76000000 		.4byte	0x76
 423 0105 0B       		.uleb128 0xb
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 12


 424 0106 A5000000 		.4byte	.LASF19
 425 010a 01       		.byte	0x1
 426 010b 33       		.byte	0x33
 427 010c 8D000000 		.4byte	0x8d
 428 0110 05       		.uleb128 0x5
 429 0111 03       		.byte	0x3
 430 0112 00000000 		.4byte	Output
 431 0116 0B       		.uleb128 0xb
 432 0117 AC000000 		.4byte	.LASF20
 433 011b 01       		.byte	0x1
 434 011c 35       		.byte	0x35
 435 011d 81000000 		.4byte	0x81
 436 0121 05       		.uleb128 0x5
 437 0122 03       		.byte	0x3
 438 0123 00000000 		.4byte	ContinuouslySendData
 439 0127 0B       		.uleb128 0xb
 440 0128 37020000 		.4byte	.LASF21
 441 012c 01       		.byte	0x1
 442 012d 36       		.byte	0x36
 443 012e 81000000 		.4byte	0x81
 444 0132 05       		.uleb128 0x5
 445 0133 03       		.byte	0x3
 446 0134 00000000 		.4byte	SendSingleByte
 447 0138 0B       		.uleb128 0xb
 448 0139 07010000 		.4byte	.LASF22
 449 013d 01       		.byte	0x1
 450 013e 37       		.byte	0x37
 451 013f 81000000 		.4byte	0x81
 452 0143 05       		.uleb128 0x5
 453 0144 03       		.byte	0x3
 454 0145 00000000 		.4byte	SendEmulatedData
 455 0149 0C       		.uleb128 0xc
 456 014a A7000000 		.4byte	0xa7
 457 014e 59010000 		.4byte	0x159
 458 0152 0D       		.uleb128 0xd
 459 0153 B5000000 		.4byte	0xb5
 460 0157 0F       		.byte	0xf
 461 0158 00       		.byte	0
 462 0159 0B       		.uleb128 0xb
 463 015a 8D010000 		.4byte	.LASF23
 464 015e 01       		.byte	0x1
 465 015f 39       		.byte	0x39
 466 0160 49010000 		.4byte	0x149
 467 0164 05       		.uleb128 0x5
 468 0165 03       		.byte	0x3
 469 0166 00000000 		.4byte	TransmitBuffer
 470 016a 0B       		.uleb128 0xb
 471 016b 00000000 		.4byte	.LASF24
 472 016f 01       		.byte	0x1
 473 0170 3B       		.byte	0x3b
 474 0171 81000000 		.4byte	0x81
 475 0175 05       		.uleb128 0x5
 476 0176 03       		.byte	0x3
 477 0177 00000000 		.4byte	EmulatedData
 478 017b 00       		.byte	0
 479              		.section	.debug_abbrev,"",%progbits
 480              	.Ldebug_abbrev0:
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 13


 481 0000 01       		.uleb128 0x1
 482 0001 11       		.uleb128 0x11
 483 0002 01       		.byte	0x1
 484 0003 25       		.uleb128 0x25
 485 0004 0E       		.uleb128 0xe
 486 0005 13       		.uleb128 0x13
 487 0006 0B       		.uleb128 0xb
 488 0007 03       		.uleb128 0x3
 489 0008 0E       		.uleb128 0xe
 490 0009 1B       		.uleb128 0x1b
 491 000a 0E       		.uleb128 0xe
 492 000b 55       		.uleb128 0x55
 493 000c 17       		.uleb128 0x17
 494 000d 11       		.uleb128 0x11
 495 000e 01       		.uleb128 0x1
 496 000f 10       		.uleb128 0x10
 497 0010 17       		.uleb128 0x17
 498 0011 00       		.byte	0
 499 0012 00       		.byte	0
 500 0013 02       		.uleb128 0x2
 501 0014 24       		.uleb128 0x24
 502 0015 00       		.byte	0
 503 0016 0B       		.uleb128 0xb
 504 0017 0B       		.uleb128 0xb
 505 0018 3E       		.uleb128 0x3e
 506 0019 0B       		.uleb128 0xb
 507 001a 03       		.uleb128 0x3
 508 001b 0E       		.uleb128 0xe
 509 001c 00       		.byte	0
 510 001d 00       		.byte	0
 511 001e 03       		.uleb128 0x3
 512 001f 16       		.uleb128 0x16
 513 0020 00       		.byte	0
 514 0021 03       		.uleb128 0x3
 515 0022 0E       		.uleb128 0xe
 516 0023 3A       		.uleb128 0x3a
 517 0024 0B       		.uleb128 0xb
 518 0025 3B       		.uleb128 0x3b
 519 0026 0B       		.uleb128 0xb
 520 0027 49       		.uleb128 0x49
 521 0028 13       		.uleb128 0x13
 522 0029 00       		.byte	0
 523 002a 00       		.byte	0
 524 002b 04       		.uleb128 0x4
 525 002c 24       		.uleb128 0x24
 526 002d 00       		.byte	0
 527 002e 0B       		.uleb128 0xb
 528 002f 0B       		.uleb128 0xb
 529 0030 3E       		.uleb128 0x3e
 530 0031 0B       		.uleb128 0xb
 531 0032 03       		.uleb128 0x3
 532 0033 08       		.uleb128 0x8
 533 0034 00       		.byte	0
 534 0035 00       		.byte	0
 535 0036 05       		.uleb128 0x5
 536 0037 16       		.uleb128 0x16
 537 0038 00       		.byte	0
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 14


 538 0039 03       		.uleb128 0x3
 539 003a 0E       		.uleb128 0xe
 540 003b 3A       		.uleb128 0x3a
 541 003c 0B       		.uleb128 0xb
 542 003d 3B       		.uleb128 0x3b
 543 003e 05       		.uleb128 0x5
 544 003f 49       		.uleb128 0x49
 545 0040 13       		.uleb128 0x13
 546 0041 00       		.byte	0
 547 0042 00       		.byte	0
 548 0043 06       		.uleb128 0x6
 549 0044 2E       		.uleb128 0x2e
 550 0045 00       		.byte	0
 551 0046 3F       		.uleb128 0x3f
 552 0047 19       		.uleb128 0x19
 553 0048 03       		.uleb128 0x3
 554 0049 0E       		.uleb128 0xe
 555 004a 3A       		.uleb128 0x3a
 556 004b 0B       		.uleb128 0xb
 557 004c 3B       		.uleb128 0x3b
 558 004d 0B       		.uleb128 0xb
 559 004e 27       		.uleb128 0x27
 560 004f 19       		.uleb128 0x19
 561 0050 11       		.uleb128 0x11
 562 0051 01       		.uleb128 0x1
 563 0052 12       		.uleb128 0x12
 564 0053 06       		.uleb128 0x6
 565 0054 40       		.uleb128 0x40
 566 0055 18       		.uleb128 0x18
 567 0056 9642     		.uleb128 0x2116
 568 0058 19       		.uleb128 0x19
 569 0059 00       		.byte	0
 570 005a 00       		.byte	0
 571 005b 07       		.uleb128 0x7
 572 005c 2E       		.uleb128 0x2e
 573 005d 01       		.byte	0x1
 574 005e 3F       		.uleb128 0x3f
 575 005f 19       		.uleb128 0x19
 576 0060 03       		.uleb128 0x3
 577 0061 0E       		.uleb128 0xe
 578 0062 3A       		.uleb128 0x3a
 579 0063 0B       		.uleb128 0xb
 580 0064 3B       		.uleb128 0x3b
 581 0065 0B       		.uleb128 0xb
 582 0066 49       		.uleb128 0x49
 583 0067 13       		.uleb128 0x13
 584 0068 11       		.uleb128 0x11
 585 0069 01       		.uleb128 0x1
 586 006a 12       		.uleb128 0x12
 587 006b 06       		.uleb128 0x6
 588 006c 40       		.uleb128 0x40
 589 006d 18       		.uleb128 0x18
 590 006e 9642     		.uleb128 0x2116
 591 0070 19       		.uleb128 0x19
 592 0071 01       		.uleb128 0x1
 593 0072 13       		.uleb128 0x13
 594 0073 00       		.byte	0
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 15


 595 0074 00       		.byte	0
 596 0075 08       		.uleb128 0x8
 597 0076 34       		.uleb128 0x34
 598 0077 00       		.byte	0
 599 0078 03       		.uleb128 0x3
 600 0079 08       		.uleb128 0x8
 601 007a 3A       		.uleb128 0x3a
 602 007b 0B       		.uleb128 0xb
 603 007c 3B       		.uleb128 0x3b
 604 007d 0B       		.uleb128 0xb
 605 007e 49       		.uleb128 0x49
 606 007f 13       		.uleb128 0x13
 607 0080 02       		.uleb128 0x2
 608 0081 18       		.uleb128 0x18
 609 0082 00       		.byte	0
 610 0083 00       		.byte	0
 611 0084 09       		.uleb128 0x9
 612 0085 34       		.uleb128 0x34
 613 0086 00       		.byte	0
 614 0087 03       		.uleb128 0x3
 615 0088 0E       		.uleb128 0xe
 616 0089 3A       		.uleb128 0x3a
 617 008a 0B       		.uleb128 0xb
 618 008b 3B       		.uleb128 0x3b
 619 008c 05       		.uleb128 0x5
 620 008d 49       		.uleb128 0x49
 621 008e 13       		.uleb128 0x13
 622 008f 3F       		.uleb128 0x3f
 623 0090 19       		.uleb128 0x19
 624 0091 3C       		.uleb128 0x3c
 625 0092 19       		.uleb128 0x19
 626 0093 00       		.byte	0
 627 0094 00       		.byte	0
 628 0095 0A       		.uleb128 0xa
 629 0096 35       		.uleb128 0x35
 630 0097 00       		.byte	0
 631 0098 49       		.uleb128 0x49
 632 0099 13       		.uleb128 0x13
 633 009a 00       		.byte	0
 634 009b 00       		.byte	0
 635 009c 0B       		.uleb128 0xb
 636 009d 34       		.uleb128 0x34
 637 009e 00       		.byte	0
 638 009f 03       		.uleb128 0x3
 639 00a0 0E       		.uleb128 0xe
 640 00a1 3A       		.uleb128 0x3a
 641 00a2 0B       		.uleb128 0xb
 642 00a3 3B       		.uleb128 0x3b
 643 00a4 0B       		.uleb128 0xb
 644 00a5 49       		.uleb128 0x49
 645 00a6 13       		.uleb128 0x13
 646 00a7 3F       		.uleb128 0x3f
 647 00a8 19       		.uleb128 0x19
 648 00a9 02       		.uleb128 0x2
 649 00aa 18       		.uleb128 0x18
 650 00ab 00       		.byte	0
 651 00ac 00       		.byte	0
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 16


 652 00ad 0C       		.uleb128 0xc
 653 00ae 01       		.uleb128 0x1
 654 00af 01       		.byte	0x1
 655 00b0 49       		.uleb128 0x49
 656 00b1 13       		.uleb128 0x13
 657 00b2 01       		.uleb128 0x1
 658 00b3 13       		.uleb128 0x13
 659 00b4 00       		.byte	0
 660 00b5 00       		.byte	0
 661 00b6 0D       		.uleb128 0xd
 662 00b7 21       		.uleb128 0x21
 663 00b8 00       		.byte	0
 664 00b9 49       		.uleb128 0x49
 665 00ba 13       		.uleb128 0x13
 666 00bb 2F       		.uleb128 0x2f
 667 00bc 0B       		.uleb128 0xb
 668 00bd 00       		.byte	0
 669 00be 00       		.byte	0
 670 00bf 00       		.byte	0
 671              		.section	.debug_aranges,"",%progbits
 672 0000 24000000 		.4byte	0x24
 673 0004 0200     		.2byte	0x2
 674 0006 00000000 		.4byte	.Ldebug_info0
 675 000a 04       		.byte	0x4
 676 000b 00       		.byte	0
 677 000c 0000     		.2byte	0
 678 000e 0000     		.2byte	0
 679 0010 00000000 		.4byte	.LFB64
 680 0014 9C000000 		.4byte	.LFE64-.LFB64
 681 0018 00000000 		.4byte	.LFB65
 682 001c C0000000 		.4byte	.LFE65-.LFB65
 683 0020 00000000 		.4byte	0
 684 0024 00000000 		.4byte	0
 685              		.section	.debug_ranges,"",%progbits
 686              	.Ldebug_ranges0:
 687 0000 00000000 		.4byte	.LFB64
 688 0004 9C000000 		.4byte	.LFE64
 689 0008 00000000 		.4byte	.LFB65
 690 000c C0000000 		.4byte	.LFE65
 691 0010 00000000 		.4byte	0
 692 0014 00000000 		.4byte	0
 693              		.section	.debug_line,"",%progbits
 694              	.Ldebug_line0:
 695 0000 C1010000 		.section	.debug_str,"MS",%progbits,1
 695      02004C01 
 695      00000201 
 695      FB0E0D00 
 695      01010101 
 696              	.LASF24:
 697 0000 456D756C 		.ascii	"EmulatedData\000"
 697      61746564 
 697      44617461 
 697      00
 698              	.LASF25:
 699 000d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 699      43313120 
 699      352E342E 
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 17


 699      31203230 
 699      31363036 
 700 0040 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 700      20726576 
 700      6973696F 
 700      6E203233 
 700      37373135 
 701 0073 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 701      66756E63 
 701      74696F6E 
 701      2D736563 
 701      74696F6E 
 702              	.LASF9:
 703 009b 5F5F696E 		.ascii	"__int32_t\000"
 703      7433325F 
 703      7400
 704              	.LASF19:
 705 00a5 4F757470 		.ascii	"Output\000"
 705      757400
 706              	.LASF20:
 707 00ac 436F6E74 		.ascii	"ContinuouslySendData\000"
 707      696E756F 
 707      75736C79 
 707      53656E64 
 707      44617461 
 708              	.LASF13:
 709 00c1 666C6F61 		.ascii	"float\000"
 709      7400
 710              	.LASF1:
 711 00c7 756E7369 		.ascii	"unsigned char\000"
 711      676E6564 
 711      20636861 
 711      7200
 712              	.LASF5:
 713 00d5 6C6F6E67 		.ascii	"long unsigned int\000"
 713      20756E73 
 713      69676E65 
 713      6420696E 
 713      7400
 714              	.LASF3:
 715 00e7 73686F72 		.ascii	"short unsigned int\000"
 715      7420756E 
 715      7369676E 
 715      65642069 
 715      6E7400
 716              	.LASF18:
 717 00fa 49544D5F 		.ascii	"ITM_RxBuffer\000"
 717      52784275 
 717      66666572 
 717      00
 718              	.LASF22:
 719 0107 53656E64 		.ascii	"SendEmulatedData\000"
 719      456D756C 
 719      61746564 
 719      44617461 
 719      00
 720              	.LASF14:
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 18


 721 0118 646F7562 		.ascii	"double\000"
 721      6C6500
 722              	.LASF29:
 723 011f 6D61696E 		.ascii	"main\000"
 723      00
 724              	.LASF12:
 725 0124 75696E74 		.ascii	"uint16\000"
 725      313600
 726              	.LASF8:
 727 012b 756E7369 		.ascii	"unsigned int\000"
 727      676E6564 
 727      20696E74 
 727      00
 728              	.LASF7:
 729 0138 6C6F6E67 		.ascii	"long long unsigned int\000"
 729      206C6F6E 
 729      6720756E 
 729      7369676E 
 729      65642069 
 730              	.LASF10:
 731 014f 696E7433 		.ascii	"int32_t\000"
 731      325F7400 
 732              	.LASF28:
 733 0157 5472616E 		.ascii	"Transmit\000"
 733      736D6974 
 733      00
 734              	.LASF17:
 735 0160 73697A65 		.ascii	"sizetype\000"
 735      74797065 
 735      00
 736              	.LASF6:
 737 0169 6C6F6E67 		.ascii	"long long int\000"
 737      206C6F6E 
 737      6720696E 
 737      7400
 738              	.LASF26:
 739 0177 6D61696E 		.ascii	"main.c\000"
 739      2E6300
 740              	.LASF15:
 741 017e 63686172 		.ascii	"char\000"
 741      00
 742              	.LASF2:
 743 0183 73686F72 		.ascii	"short int\000"
 743      7420696E 
 743      7400
 744              	.LASF23:
 745 018d 5472616E 		.ascii	"TransmitBuffer\000"
 745      736D6974 
 745      42756666 
 745      657200
 746              	.LASF27:
 747 019c 433A5C55 		.ascii	"C:\\Users\\ecsa\\Desktop\\79427527\\CE95277 ADC and"
 747      73657273 
 747      5C656373 
 747      615C4465 
 747      736B746F 
 748 01ca 20554152 		.ascii	" UART.cywrk.Archive01\\CE95277 ADC and UART\\CE9527"
ARM GAS  C:\Users\ecsa\AppData\Local\Temp\ccWvH0RZ.s 			page 19


 748      542E6379 
 748      77726B2E 
 748      41726368 
 748      69766530 
 749 01fb 37204144 		.ascii	"7 ADC and UART.cydsn\000"
 749      4320616E 
 749      64205541 
 749      52542E63 
 749      7964736E 
 750              	.LASF11:
 751 0210 75696E74 		.ascii	"uint8\000"
 751      3800
 752              	.LASF4:
 753 0216 6C6F6E67 		.ascii	"long int\000"
 753      20696E74 
 753      00
 754              	.LASF16:
 755 021f 6C6F6E67 		.ascii	"long double\000"
 755      20646F75 
 755      626C6500 
 756              	.LASF0:
 757 022b 7369676E 		.ascii	"signed char\000"
 757      65642063 
 757      68617200 
 758              	.LASF21:
 759 0237 53656E64 		.ascii	"SendSingleByte\000"
 759      53696E67 
 759      6C654279 
 759      746500
 760              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
